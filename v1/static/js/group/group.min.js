if(target_group=url.searchParams.get("group_id"),null!=target_group){var protocol=window.location.protocol,socket=io.connect(protocol+"//"+document.domain+":"+location.port),currentDate=null,currentUser=null,currentListItem=null;function fetchMessages(){$.ajax({url:"/get_group_messages",type:"GET",data:{group_id:target_group},success:function(e){e.messages.forEach(function(e){var t=e.time.split("_");if(time=t[1],date=t[0],e.sender.id!==currentUser||date!==currentDate){var i="";date!==currentDate&&(i=`<div class="coversation-divider"><span>${date}</span></div>`);var n=e.sender.id===current_user_id?"outgoing":"incoming",r=$(`\n                            ${i}\n                            <li class="conversation-item ${n}">\n                                <div class="conversation-item-side">\n                                    <img class="conversation-item-image" src="/static/images/profile/${e.sender.profile}" alt="">\n                                </div>\n                                <div class="conversation-item-content"></div>\n                            </li>\n                        `);$("#messages-container").append(r),currentUser=e.sender.id,currentDate=date,currentListItem=r}var a=$(`\n                        <div class="conversation-item-wrapper">\n                            <div class="conversation-item-text">\n                                <p></p>\n                                <div class="conversation-item-time">${time}</div>\n                            </div>\n                            <div class="conversation-item-dropdown">\n                                <button type="button" class="conversation-item-dropdown-toggle"><i class="ri-more-2-line"></i></button>\n                                <ul class="conversation-item-dropdown-list">\n                                    <li><a href="#"><i class="ri-share-forward-line"></i> Forward</a></li>\n                                    <li><a href="#"><i class="ri-delete-bin-line"></i> Delete</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    `),s=a.find(".conversation-item-text p");if(e.file){var o=e.file.split(".");o.length>1?(file_ext=o[o.length-1].toLowerCase(),["jpg","png","jpeg"].includes(file_ext)?s.html(`<img src="static/files/images/${e.file}"><br>${$("<div>").text(e.message).html().replace(/\n/g,"<br>")}`):["docx","xlsx","pptx"].includes(file_ext)?s.html(`<i class="ri-error-warning-line"></i> ${file_ext} file currently not supported!<br>${$("<div>").text(e.message).html().replace(/\n/g,"<br>")}`):(["pdf","txt"].includes(file_ext),s.html(`<iframe src="static/files/documents/${e.file}"></iframe><br>${$("<div>").text(e.message).html().replace(/\n/g,"<br>")}`))):s.html(`Unsupported file!<br>${$("<div>").text(e.message).html().replace(/\n/g,"<br>")}`)}else s.html(`${$("<div>").text(e.message).html().replace(/\n/g,"<br>")}`);currentListItem.find(".conversation-item-content").append(a),scrollToBottom()})},error:function(e){console.error("Error fetching messages:",e)}})}$(document).ready(fetchMessages()),socket.on("message",e=>{var t=new Blob([e.file],{type:"application/octet-stream"});file=URL.createObjectURL(t);var i=e.time.split("_");if(time=i[1],date=i[0],e.sender_id!==currentUser||date!==currentDate){var n="";date!==currentDate&&(n=`<div class="coversation-divider"><span>${e.sender_profile}</span></div>`);var r=e.sender_id===current_user_id?"outgoing":"incoming",a=$(`\n                ${n}\n                <li class="conversation-item ${r}">\n                    <div class="conversation-item-side">\n                        <img class="conversation-item-image" src="/static/images/profile/${e.profile}" alt="">\n                    </div>\n                    <div class="conversation-item-content"></div>\n\n                </li>\n            `);$("#messages-container").append(a),currentUser=e.sender_id,currentDate=date,currentListItem=a}var s=$(`\n            <div class="conversation-item-wrapper">\n                <div class="conversation-item-text">\n                    <p></p>\n                    <div class="conversation-item-time">${time}</div>\n                </div>\n                <div class="conversation-item-dropdown">\n                    <button type="button" class="conversation-item-dropdown-toggle"><i class="ri-more-2-line"></i></button>\n                    <ul class="conversation-item-dropdown-list">\n                        <li><a href="#"><i class="ri-share-forward-line"></i> Forward</a></li>\n                        <li><a href="#"><i class="ri-delete-bin-line"></i> Delete</a></li>\n                    </ul>\n                </div>\n            </div>\n        `),o=s.find(".conversation-item-text p");if(e.file){var l=e.original_filename.split(".");l.length>1?(file_ext=l[l.length-1].toLowerCase(),["jpg","png","jpeg"].includes(file_ext)?o.html(`<img src="${file}" alt="image"><br>${$("<div>").text(e.message).html().replace(/\n/g,"<br>")}`):["docx","xlsx","pptx"].includes(file_ext)?o.html(`<i class="ri-error-warning-line"></i> ${file_ext} file currently not supported!<br>${$("<div>").text(e.message).html().replace(/\n/g,"<br>")}`):(["pdf","txt"].includes(file_ext),o.html(`<i class="ri-information-line"></i> waiting for this file!<br>${$("<div>").text(e.message).html().replace(/\n/g,"<br>")}`))):o.html(`<i class="ri-error-warning-line"></i> unsupported file!<br>${$("<div>").text(e.message).html().replace(/\n/g,"<br>")}`)}else o.html(`${$("<div>").text(e.message).html().replace(/\n/g,"<br>")}`);currentListItem.find(".conversation-item-content").append(s)});const e=document.querySelector(".conversation-attachment");var inputFile=e.querySelector("ul input"),attachFile=e.querySelector("ul li");function submitForm(){var e=$("#chatForm"),t=e.find("textarea[name='msg']").val(),i=inputFile.files[0];const n=Date.now(),r=new Date(n),a=r.toISOString().split("T")[0],s=r.getHours(),o=r.getMinutes();let l=`${a}_${s}:${o<10?"0":""}${o}`;if(""!==t.trim()){if(i){var c=new FileReader;c.onloadend=function(){var e=c.result;socket.emit("message",{sender_id:current_user_id,sender_profile:user_details.profile,receiver_id:target_group,message:t,file:e,original_filename:i.name,time:l})},c.readAsArrayBuffer(i)}else socket.emit("message",{sender_id:current_user_id,sender_profile:user_details.profile,receiver_id:target_group,message:t,time:l});e.find("textarea[name='msg']").val("")}else if(i){c=new FileReader;c.onloadend=function(){var e=c.result;socket.emit("message",{sender_id:current_user_id,receiver_id:target_group,file:e,original_filename:i.name,date:a,time:l})},c.readAsArrayBuffer(i)}}attachFile.addEventListener("click",()=>inputFile.click()),inputFile.addEventListener("change",e=>{let t=inputFile.files[0];t&&document.querySelector("form textarea").removeAttribute("required")}),document.querySelectorAll(".conversation-item-dropdown-toggle").forEach(function(e){e.addEventListener("click",function(e){e.preventDefault(),this.parentElement.classList.contains("active")?this.parentElement.classList.remove("active"):(document.querySelectorAll(".conversation-item-dropdown").forEach(function(e){e.classList.remove("active")}),this.parentElement.classList.add("active"))})}),document.addEventListener("click",function(e){e.target.matches(".conversation-item-dropdown, .conversation-item-dropdown *")||document.querySelectorAll(".conversation-item-dropdown").forEach(function(e){e.classList.remove("active")})}),document.querySelector(".conversation-attachment-toggle").addEventListener("click",function(e){e.preventDefault(),this.parentElement.classList.toggle("active")}),document.addEventListener("click",function(e){e.target.matches(".conversation-attachment, .conversation-attachment *")||document.querySelector(".conversation-attachment").classList.remove("active")}),inputField=document.querySelector(".conversation-form-input");const t=inputField.scrollHeight;function scrollToBottom(){chatBox.scrollTop=chatBox.scrollHeight}inputField.addEventListener("input",()=>{inputField.style.height=`${t}px`,inputField.style.height=`${inputField.scrollHeight}px`}),chatBox=document.querySelector(".conversation-main");var copyBtn=document.getElementById("copy-link"),iviteText=document.getElementById("invite-link");copyBtn.addEventListener("click",()=>{navigator.clipboard.writeText(iviteText.innerText),copyBtn.innerText="copied"});var startAudioCallBtn=document.querySelector(".conversation-buttons #voice-call");startAudioCallBtn.addEventListener("click",()=>{startVoiceCall()})}else{function handleMediaQuery(e){var t=document.querySelector(".conversation-default.sm");e.matches?t.style.display="flex":t.style.display="none"}var mediaQuery=window.matchMedia("(max-width: 767px)");handleMediaQuery(mediaQuery),mediaQuery.addListener(handleMediaQuery)}